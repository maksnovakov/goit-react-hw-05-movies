{"version":3,"file":"static/js/851.3c4b2de1.chunk.js","mappings":"8NACA,EAAyB,wB,SCEV,SAASA,EAAT,GACX,OADuC,EAATC,MACjBC,KAAI,YAAyC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UACrC,OACI,qBAASC,UAAWC,EAApB,WACI,wBAAKL,KACL,uBAAIG,KACJ,uBAAIF,MAHgCC,EAM/C,GACJ,CCRc,SAASI,EAAYC,GAChC,IAAQC,GAAYC,EAAAA,EAAAA,IAAU,MAAtBD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAjB,GACvB,IAAMkB,EAAOlB,EAAMkB,KAAKC,QACxBL,EAAWI,EACd,GACJ,GAAE,CAACR,IAEGG,EAAQO,OAAS,GACpB,SAAC,EAAD,CAASpB,MAAOa,KAEhB,sEAEP,C,oKCnBYQ,EAAO,SACZC,GACA,OAAOC,EAAAA,EAAAA,IAAUD,EACpB,ECCL,EANiB,CACbE,SAAU,+BACVC,QAAS,mCACTC,iBAAkB,SCAdF,EAAsBG,EAAAA,SAAZF,EAAYE,EAAAA,QAEjBC,EAAc,WAAe,IAAdC,EAAa,uDAAN,EAC/B,OAAOR,EAAA,UACAG,EADA,uCACuCC,EADvC,iBACuDI,GAEjE,EAEYC,EAAuB,SAACC,GAA6B,IAAdF,EAAa,uDAAN,EACvD,OAAOR,EAAA,UACAG,EADA,iCACiCC,EADjC,iBACiDI,EADjD,kBAC+DE,GAEzE,EAEYC,EAAkB,SAAAC,GAC3B,OAAOZ,EAAA,UAAYG,EAAZ,kBAA8BS,EAA9B,oBAAiDR,GAC3D,EAEYS,EAAY,SAAAD,GACrB,OAAOZ,EAAA,UAAYG,EAAZ,kBAA8BS,EAA9B,4BAAyDR,GACnE,EAEYT,EAAe,SAAAiB,GACxB,OAAOZ,EAAA,UAAYG,EAAZ,kBAA8BS,EAA9B,4BAAyDR,GACnE,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","pages/ReviewsPage/ReviewsPage.jsx","services/api.jsx","services/settings.jsx","services/fetchMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"coment\":\"Reviews_coment__ttw00\"};","import styles from '../Reviews/Reviews.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Reviews({ array }) {\n    return array.map(({ author, content, id, update_at }) => {\n        return (\n            <article className={styles.coment} key={id}>\n                <h3>{author}</h3>\n                <b>{update_at}</b>\n                <p>{content}</p>\n            </article>\n        );\n    });\n}\n\nReviews.propTypes = {\n    array: PropTypes.arrayOf(\n        PropTypes.shape({\n            author: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n            update_at: PropTypes.string.isRequired,\n        })\n    ),\n};","import { useParams } from \"react-router-dom\";\nimport { fetchReviews } from \"services/fetchMovies\";\nimport { useEffect, useState } from \"react\";\nimport Reviwes from 'components/Reviews/Reviews';\n\nexport default function ReviwesPage(params) {\n    const { movieId } = useParams(null);\n    const [reviews, setReviwes] = useState([]);\n\n    useEffect(() => {\n        fetchReviews(movieId).then(array => {\n            const data = array.data.results;\n            setReviwes(data);\n        });\n    }, [movieId]);\n\n    return reviews.length > 1 ? (\n        <Reviwes array={reviews} />\n    ) : (\n        <h3> Sorry,there are no reviews for this film.</h3>\n    );\n}","import axios from \"axios\";\n\nexport const http = {\n    get(url) {\n        return axios.get(url);\n    },\n    post(url, body) {\n        return axios.post(url, body);\n    },\n};","const settings = {\n    BASE_URL: 'https://api.themoviedb.org/3',\n    API_KEY: '06db4ee70b7b470346bb935e4264850a',\n    DEFAULT_LANGUAGE: 'en-US',\n};\n\nexport default settings;\n","import { http } from './api';\nimport apiSettings from './settings';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nexport const fetchMovies = (page = 1) => {\n    return http.get(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n};\n\nexport const fetchMoviesByRequest = (searchRequest, page = 1) => {\n    return http.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&query=${searchRequest}`\n    );\n};\n\nexport const fetchMoviesById = movieID => {\n    return http.get(`${BASE_URL}/movie/${movieID}?api_key=${API_KEY}`);\n};\n\nexport const fetchCast = movieID => {\n    return http.get(`${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieID => {\n    return http.get(`${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}`);\n};"],"names":["Reviews","array","map","author","content","id","update_at","className","styles","ReviwesPage","params","movieId","useParams","useState","reviews","setReviwes","useEffect","fetchReviews","then","data","results","length","http","url","axios","BASE_URL","API_KEY","DEFAULT_LANGUAGE","apiSettings","fetchMovies","page","fetchMoviesByRequest","searchRequest","fetchMoviesById","movieID","fetchCast"],"sourceRoot":""}