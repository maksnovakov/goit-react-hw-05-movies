{"version":3,"file":"static/js/405.d11193fa.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://react-homework-template/./src/components/BackButton/Button.module.css?732f","components/BackButton/BackButton.jsx","components/MovieCard/MovieCard.module.css","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/api.jsx","services/settings.jsx","services/fetchMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import styles from '../Container/Container.module.css';\n\nexport const Container = ({ children }) => {\n    return <div className={styles['container']}>{children}</div>;\n};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__NWQIA\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport style from './Button.module.css';\n\nexport default function BackButton() {\n    const { state } = useLocation();\n    return (\n        state?.from &&\n        (\n            <Link to={state.from}>\n            <button type='button' className={style.button}>\n                <span>Back</span>\n            </button>\n        </Link>\n        )\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from '../MovieCard/MovieCard.module.css';\nimport defaultPoster from '../MovieCard/default-portrait.jpeg';\n\nconst IMG_CONFIG = {\n    base_url: 'https://image.tmdb.org/t/p',\n    size: 'w500',\n};\n\nexport default function MovieCard({ movie }) {\n    const {\n        id,\n        backdrop_path,\n        title,\n        release_date,\n        popularity,\n        overview,\n        genres,\n    } = movie;\n    const { base_url, size } = IMG_CONFIG;\n    const imgPath = `${base_url}${size}${backdrop_path}`;\n    const location = useLocation;\n\n    return (\n        <>\n            <div className={styles['card__info--general']}>\n                <div className={styles['img__wrapper']}>\n                    {!backdrop_path ? (\n                        <img src={defaultPoster} alt={title} />) : (\n                        <img src={`${imgPath}`} alt={title} />\n                    )}\n                </div>\n                <div className={styles['details_wrapper']}>\n                    <h2>\n                        <span>{title}</span>\n                        <span>({getRelizeYear(release_date)})</span>\n                    </h2>\n                    <p> User scores:{getUserScore(popularity)} %</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h4>Genres</h4>\n                    <p>{getGenresNames(genres)}</p>\n                </div>\n            </div>\n            <div className={styles['card__info--additional']}>\n                <h5>Additional information</h5>\n                <ul>\n                    <li>\n                        <Link to={`/movies/${id}/cast`} state={location.state}>\n                            Cast\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to={`/movies/${id}/reviews`} state={location.state}>\n                            Reviews\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </>\n    );\n}\n\nMovieCard.propTypes = {\n    movie: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        backdrop_path: PropTypes.string,\n        title: PropTypes.string.isRequired,\n        release_date: PropTypes.string.isRequired,\n        popularity: PropTypes.number.isRequired,\n        overview: PropTypes.string.isRequired,\n        genres: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.number.isRequired,\n                name: PropTypes.string.isRequired,\n            }).isRequired\n        ).isRequired,\n    }).isRequired,\n};\n\nfunction getRelizeYear(date) {\n    const today = new Date(date);\n    return today.getFullYear();\n}\n\nfunction getUserScore(data) {\n    return Math.round(data);\n}\n\nfunction getGenresNames(data) {\n    return data.map(({ name }) => name).join(', ');\n}\n","import { useEffect, useState } from \"react\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport { Container } from 'components/Container/Container';\nimport Loader from 'components/Loader/Loader';\nimport BackButton from 'components/BackButton/BackButton';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nimport { fetchMoviesById } from \"services/fetchMovies\";\n\nexport default function MovieDetailsPage() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        try {\n            fetchMoviesById(movieId).then(data => {\n                const {\n                    id,\n                    backdrop_path,\n                    title,\n                    release_date,\n                    popularity,\n                    overview,\n                    genres,\n                } = data.data;\n                const object = {\n                    id,\n                    backdrop_path,\n                    title,\n                    release_date,\n                    popularity,\n                    overview,\n                    genres,\n                };\n                setMovie(object);\n            });\n        } catch (error) {\n            setError(error);\n        } finally {\n            setIsLoading(false);\n        }\n    }, [movieId]);\n\n    return (\n        <>\n            {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n            <>\n                {isLoading && <Loader color={'#3f51b5'} size={32} />}\n                <BackButton />\n                <Container>{movie && <MovieCard movie={movie} />}</Container>\n                <Outlet />\n            </>\n        </>\n    );\n}","import axios from \"axios\";\n\nexport const http = {\n    get(url) {\n        return axios.get(url);\n    },\n    post(url, body) {\n        return axios.post(url, body);\n    },\n};","const settings = {\n    BASE_URL: 'https://api.themoviedb.org/3',\n    API_KEY: '06db4ee70b7b470346bb935e4264850a',\n    DEFAULT_LANGUAGE: 'en-US',\n};\n\nexport default settings;\n","import { http } from './api';\nimport apiSettings from './settings';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nexport const fetchMovies = (page = 1) => {\n    return http.get(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n};\n\nexport const fetchMoviesByRequest = (searchRequest, page = 1) => {\n    return http.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&query=${searchRequest}`\n    );\n};\n\nexport const fetchMoviesById = movieID => {\n    return http.get(`${BASE_URL}/movie/${movieID}?api_key=${API_KEY}`);\n};\n\nexport const fetchCast = movieID => {\n    return http.get(`${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieID => {\n    return http.get(`${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}`);\n};"],"names":["Container","children","className","styles","BackButton","state","useLocation","from","to","type","style","IMG_CONFIG","MovieCard","data","movie","id","backdrop_path","title","release_date","popularity","overview","genres","size","imgPath","location","src","alt","defaultPoster","getRelizeYear","Math","round","getGenresNames","date","Date","getFullYear","map","name","join","MovieDetailsPage","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","useEffect","fetchMoviesById","then","toast","message","Loader","color","http","url","axios","BASE_URL","API_KEY","DEFAULT_LANGUAGE","apiSettings","fetchMovies","page","fetchMoviesByRequest","searchRequest","movieID","fetchCast","fetchReviews"],"sourceRoot":""}