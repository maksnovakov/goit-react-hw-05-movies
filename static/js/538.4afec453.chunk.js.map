{"version":3,"file":"static/js/538.4afec453.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieGallery/MovieGallery.module.css?cb9b","components/MovieGallery/MovieGallery.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","services/api.jsx","services/settings.jsx","services/fetchMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import styles from '../Container/Container.module.css';\n\nexport const Container = ({ children }) => {\n  return <div className={styles['container']}>{children}</div>;\n};","// extracted by mini-css-extract-plugin\nexport default {\"galleryList\":\"MovieGallery_galleryList__JyKHn\",\"gallery_item\":\"MovieGallery_gallery_item__xHaa6\"};","import { Link } from 'react-router-dom';\nimport style from '../MovieGallery/MovieGallery.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieGallery = ({ movies, prevLocation }) => {\n  const renderGallery = () =>\n    movies.map(({ id, title }) => (\n      <li key={id} className={style.galleryList_item}>\n        <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n          {title}\n        </Link>\n      </li>\n    ));\n\n  return (\n    <div>\n      <ul className={style.galleryList}>{movies ? renderGallery() : null}</ul>\n    </div>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default MovieGallery;","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm_button\":\"Searchbar_SearchForm_button__OB9qt\",\"SearchForm_imput\":\"Searchbar_SearchForm_imput__2agqX\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport style from '../Searchbar/Searchbar.module.css';\n\nconst Searchbar = ({ onSearch }) => {\n  const [searchRequest, setSearchRequest] = useState('');\n\n  const handleRequestChange = event => {\n    setSearchRequest(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchRequest.trim() === '') {\n      return toast.warning('Search field is empty!');\n    }\n    onSearch(searchRequest);\n    setSearchRequest('');\n  };\n\n  return (\n    <header>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\" className={style.SearchForm_button}>\n          Search\n        </button>\n\n        <input\n          className={style.SearchForm_input}\n          type=\"text\"\n          name=\"searchRequest\"\n          value={searchRequest}\n          onChange={handleRequestChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter your search request\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import { useState, useEffect } from \"react\";\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport { Container } from \"components/Container/Container\";\nimport Loader from 'components/Loader/Loader';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieGallery from 'components/MovieGallery/MovieGallery';\nimport { fetchMoviesByRequest } from \"services/fetchMovies\";\n\n\nexport default function MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const searchRequest = searchParams.get('query');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n    const updateMovies = searchRequest => {\n      setIsLoading(true);\n      try {\n        fetchMoviesByRequest(searchRequest).then(data => {\n          if (!data.data.results.length) {\n            return toast.error(\n              'There is no movies found with that search request'\n            );\n          }\n          const mappedMovies = data.data.results.map(({ id, title }) => ({\n            id,\n            title,\n          }));\n          setMovies([...mappedMovies]);\n        });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (searchRequest !== '') {\n      updateMovies(searchRequest);\n    }\n  }, [searchRequest]);\n\n  const handleSearchSubmit = value => {\n    setSearchParams({ query: `${value}` });\n  };\n\n  return (\n    <>\n      <Container>\n        <Searchbar onSearch={handleSearchSubmit} />\n        {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n        {isLoading && <Loader color={'#3f51b5'} size={32} />}\n        {movies.length > 0 && (\n          <MovieGallery movies={movies} prevLocation={location} />\n        )}\n      </Container>\n    </>\n  );\n}","import axios from \"axios\";\n\nexport const http = {\n    get(url) {\n        return axios.get(url);\n    },\n    post(url, body) {\n        return axios.post(url, body);\n    },\n};","const settings = {\n    BASE_URL: 'https://api.themoviedb.org/3',\n    API_KEY: '06db4ee70b7b470346bb935e4264850a',\n    DEFAULT_LANGUAGE: 'en-US',\n};\n\nexport default settings;\n","import { http } from './api';\nimport apiSettings from './settings';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nexport const fetchMovies = (page = 1) => {\n  return http.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n};\n\nexport const fetchMoviesByRequest = (searchRequest, page = 1) => {\n  return http.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&query=${searchRequest}`\n  );\n};\n\nexport const fetchMoviesById = movieId => {\n  return http.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchCast = movieId => {\n  return http.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieId => {\n  return http.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};"],"names":["Container","children","className","styles","movies","prevLocation","style","map","id","title","to","state","from","onSearch","useState","searchRequest","setSearchRequest","onSubmit","event","preventDefault","trim","toast","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","MoviesPage","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","isLoading","setIsLoading","get","location","useLocation","useEffect","fetchMoviesByRequest","then","data","results","length","mappedMovies","updateMovies","query","message","Loader","color","size","MovieGallery","http","url","axios","BASE_URL","API_KEY","DEFAULT_LANGUAGE","apiSettings","fetchMovies","page","fetchMoviesById","movieId","fetchCast","fetchReviews"],"sourceRoot":""}