{"version":3,"file":"static/js/680.4658c911.chunk.js","mappings":"uKACA,MAA4B,6B,SCCfA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OAAO,gBAAKC,UAAWC,EAAhB,SAAsCF,GAChD,C,qECHD,GAAgB,YAAc,kCAAkC,aAAe,oC,SC6B/E,EA1B4B,SAAC,GAA8B,IAA5BG,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAUnC,OACI,0BACI,eAAIH,UAAWI,EAAAA,YAAf,SAAmCF,EAVvCA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACP,eAAaP,UAAWI,EAAAA,iBAAxB,UACI,SAAC,KAAD,CAAMI,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACKI,KAFAD,EADF,IAUuD,QAGzE,C,wHC2BD,UArCiB,WACb,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACNL,GAAa,GACb,KACIM,EAAAA,EAAAA,MAAcC,MAAK,SAAAC,GACf,IAAMC,EAAeD,EAAKA,KAAKE,QAAQnB,KAAI,kBAAoB,CAC3DC,GADuC,EAAGA,GAE1CC,MAFuC,EAAOA,MAAP,IAI3CK,EAAUW,EACb,GAKJ,CAJC,MAAOR,GACLC,EAASD,EACZ,CAVD,QAWID,GAAa,EAChB,CACJ,GAAE,KAGC,gCACKD,IAAa,SAAC,IAAD,IACbE,GAASU,EAAAA,GAAAA,MAAA,wCAA6CV,EAAMW,WAC7D,UAAC,IAAD,WACKX,GAASU,EAAAA,GAAAA,MAAA,wCAA6CV,EAAMW,WAC7D,SAAC,IAAD,CAAcxB,OAAQA,EAAQC,aAAcc,KAC5C,SAAC,KAAD,CAAgBU,UAAW,WAI1C,C,oKC1CYC,EAAO,SACZC,GACA,OAAOC,EAAAA,EAAAA,IAAUD,EACpB,ECCL,EANiB,CACbE,SAAU,+BACVC,QAAS,mCACTC,iBAAkB,SCAdF,EAAsBG,EAAAA,SAAZF,EAAYE,EAAAA,QAEjBd,EAAc,WAAe,IAAde,EAAa,uDAAN,EAC/B,OAAOP,EAAA,UACAG,EADA,uCACuCC,EADvC,iBACuDG,GAEjE,EAEYC,EAAuB,SAACC,GAA6B,IAAdF,EAAa,uDAAN,EACvD,OAAOP,EAAA,UACAG,EADA,iCACiCC,EADjC,iBACiDG,EADjD,kBAC+DE,GAEzE,EAEYC,EAAkB,SAAAC,GAC3B,OAAOX,EAAA,UAAYG,EAAZ,kBAA8BQ,EAA9B,oBAAiDP,GAC3D,EAEYQ,EAAY,SAAAD,GACrB,OAAOX,EAAA,UAAYG,EAAZ,kBAA8BQ,EAA9B,4BAAyDP,GACnE,EAEYS,EAAe,SAAAF,GACxB,OAAOX,EAAA,UAAYG,EAAZ,kBAA8BQ,EAA9B,4BAAyDP,GACnE,C","sources":["webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://react-homework-template/./src/components/MovieGallery/MovieGallery.module.css?cb9b","components/MovieGallery/MovieGallery.jsx","pages/HomePage/HomePage.jsx","services/api.jsx","services/settings.jsx","services/fetchMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import styles from '../Container/Container.module.css';\n\nexport const Container = ({ children }) => {\n    return <div className={styles['container']}>{children}</div>;\n};","// extracted by mini-css-extract-plugin\nexport default {\"galleryList\":\"MovieGallery_galleryList__JyKHn\",\"gallery_item\":\"MovieGallery_gallery_item__xHaa6\"};","import { Link } from 'react-router-dom';\nimport style from '../MovieGallery/MovieGallery.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieGallery = ({ movies, prevLocation }) => {\n    const renderGallery = () =>\n        movies.map(({ id, title }) => (\n            <li key={id} className={style.galleryList_item}>\n                <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n                    {title}\n                </Link>\n            </li>\n        ));\n    \n    return (\n        <div>\n            <ul className={style.galleryList}>{movies ? renderGallery() : null}</ul>\n        </div>\n    );\n};\n\nMovieGallery.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        }).isRequired\n    ),\n};\n\nexport default MovieGallery;","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { Container } from \"components/Container/Container\";\nimport MovieGallery from 'components/MovieGallery/MovieGallery';\nimport { fetchMovies } from '../../services/fetchMovies';\nimport Loader from 'components/Loader/Loader';\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const location = useLocation();\n\n    useEffect(() => {\n        setIsLoading(true);\n        try {\n            fetchMovies().then(data => {\n                const mappedMovies = data.data.results.map(({ id, title }) => ({\n                    id,\n                    title,\n                }));\n                setMovies(mappedMovies);\n            });\n        } catch (error) {\n            setError(error);\n        } finally {\n            setIsLoading(false);\n        }\n    }, []);\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n            <Container>\n                {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n                <MovieGallery movies={movies} prevLocation={location} />\n                <ToastContainer autoClose={3000} />\n            </Container>\n        </>\n    );\n};\n\nexport default HomePage;","import axios from \"axios\";\n\nexport const http = {\n    get(url) {\n        return axios.get(url);\n    },\n    post(url, body) {\n        return axios.post(url, body);\n    },\n};","const settings = {\n    BASE_URL: 'https://api.themoviedb.org/3',\n    API_KEY: '06db4ee70b7b470346bb935e4264850a',\n    DEFAULT_LANGUAGE: 'en-US',\n};\n\nexport default settings;\n","import { http } from './api';\nimport apiSettings from './settings';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nexport const fetchMovies = (page = 1) => {\n    return http.get(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n};\n\nexport const fetchMoviesByRequest = (searchRequest, page = 1) => {\n    return http.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&query=${searchRequest}`\n    );\n};\n\nexport const fetchMoviesById = movieID => {\n    return http.get(`${BASE_URL}/movie/${movieID}?api_key=${API_KEY}`);\n};\n\nexport const fetchCast = movieID => {\n    return http.get(`${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieID => {\n    return http.get(`${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}`);\n};"],"names":["Container","children","className","styles","movies","prevLocation","style","map","id","title","to","state","from","useState","setMovies","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","fetchMovies","then","data","mappedMovies","results","toast","message","autoClose","http","url","axios","BASE_URL","API_KEY","DEFAULT_LANGUAGE","apiSettings","page","fetchMoviesByRequest","searchRequest","fetchMoviesById","movieID","fetchCast","fetchReviews"],"sourceRoot":""}